name: "Linters"
on:
  workflow_call:

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["pre-cluster", "cluster", "apps"]
    defaults:
      run:
        working-directory: "deploy/stacks/${{ matrix.stack }}"
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Format
        env:
          TF_WORKSPACE: "production"
        run: terraform fmt -check=true -recursive

  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          check-latest: true
      - name: Install Task
        uses: arduino/setup-task@v2
      - name: Generate code
        run: task generate
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6.2.0
        with:
          version: latest
          skip-pkg-cache: true
          args: -v

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "web/ui"
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate code
        run: yarn generate

      - name: ESLint
        run: yarn style:lint

      - name: Prettier
        run: yarn style:prettier

      - name: TypeScript
        run: yarn style:ts
